#include "vm.h"
CF_BEGIN

void sys_Obj_make_f(fr_Env env, fr_Obj self);
fr_Bool sys_Obj_equals_f(fr_Env env, fr_Obj self, fr_Obj that);
fr_Int sys_Obj_compare_f(fr_Env env, fr_Obj self, fr_Obj that);
fr_Int sys_Obj_hash_f(fr_Env env, fr_Obj self);
fr_Obj sys_Obj_toStr_f(fr_Env env, fr_Obj self);
fr_Obj sys_Obj_trap_f(fr_Env env, fr_Obj self, fr_Obj name, fr_Obj args);
fr_Obj sys_Obj_with_f(fr_Env env, fr_Obj self, fr_Obj f);
fr_Bool sys_Obj_isImmutable_f(fr_Env env, fr_Obj self);
fr_Obj sys_Obj_toImmutable_f(fr_Env env, fr_Obj self);
fr_Obj sys_Obj_typeof_f(fr_Env env, fr_Obj self);
void sys_Obj_finalize_f(fr_Env env, fr_Obj self);
void sys_Obj_echo_f(fr_Env env, fr_Obj x);
void sys_Obj_assert_f(fr_Env env, fr_Bool condition, fr_Obj msg);
void sys_Num_make_f(fr_Env env, fr_Obj self);
fr_Int sys_Num_toInt_f(fr_Env env, fr_Obj self);
fr_Float sys_Num_toFloat_f(fr_Env env, fr_Obj self);
fr_Int sys_Int_fromStr_f(fr_Env env, fr_Obj s, fr_Int radix, fr_Bool checked);
fr_Int sys_Int_random_f(fr_Env env, fr_Obj r);
void sys_Int_privateMake_f(fr_Env env, fr_Int self);
fr_Bool sys_Int_equals_f(fr_Env env, fr_Int self, fr_Obj obj);
fr_Int sys_Int_compare_f(fr_Env env, fr_Int self, fr_Obj obj);
fr_Int sys_Int_hash_f(fr_Env env, fr_Int self);
fr_Int sys_Int_negate_f(fr_Env env, fr_Int self);
fr_Int sys_Int_increment_f(fr_Env env, fr_Int self);
fr_Int sys_Int_decrement_f(fr_Env env, fr_Int self);
fr_Int sys_Int_mult_f(fr_Env env, fr_Int self, fr_Int b);
fr_Float sys_Int_multFloat_f(fr_Env env, fr_Int self, fr_Float b);
fr_Int sys_Int_div_f(fr_Env env, fr_Int self, fr_Int b);
fr_Float sys_Int_divFloat_f(fr_Env env, fr_Int self, fr_Float b);
fr_Int sys_Int_mod_f(fr_Env env, fr_Int self, fr_Int b);
fr_Float sys_Int_modFloat_f(fr_Env env, fr_Int self, fr_Float b);
fr_Int sys_Int_plus_f(fr_Env env, fr_Int self, fr_Int b);
fr_Float sys_Int_plusFloat_f(fr_Env env, fr_Int self, fr_Float b);
fr_Int sys_Int_minus_f(fr_Env env, fr_Int self, fr_Int b);
fr_Float sys_Int_minusFloat_f(fr_Env env, fr_Int self, fr_Float b);
fr_Int sys_Int_not_f(fr_Env env, fr_Int self);
fr_Int sys_Int_and_f(fr_Env env, fr_Int self, fr_Int b);
fr_Int sys_Int_or_f(fr_Env env, fr_Int self, fr_Int b);
fr_Int sys_Int_xor_f(fr_Env env, fr_Int self, fr_Int b);
fr_Int sys_Int_shiftl_f(fr_Env env, fr_Int self, fr_Int b);
fr_Int sys_Int_shiftr_f(fr_Env env, fr_Int self, fr_Int b);
fr_Int sys_Int_shifta_f(fr_Env env, fr_Int self, fr_Int b);
fr_Int sys_Int_abs_f(fr_Env env, fr_Int self);
fr_Int sys_Int_min_f(fr_Env env, fr_Int self, fr_Int that);
fr_Int sys_Int_max_f(fr_Env env, fr_Int self, fr_Int that);
fr_Int sys_Int_pow_f(fr_Env env, fr_Int self, fr_Int pow);
fr_Bool sys_Int_isEven_f(fr_Env env, fr_Int self);
fr_Bool sys_Int_isOdd_f(fr_Env env, fr_Int self);
fr_Bool sys_Int_isSpace_f(fr_Env env, fr_Int self);
fr_Bool sys_Int_isAlpha_f(fr_Env env, fr_Int self);
fr_Bool sys_Int_isAlphaNum_f(fr_Env env, fr_Int self);
fr_Bool sys_Int_isUpper_f(fr_Env env, fr_Int self);
fr_Bool sys_Int_isLower_f(fr_Env env, fr_Int self);
fr_Int sys_Int_upper_f(fr_Env env, fr_Int self);
fr_Int sys_Int_lower_f(fr_Env env, fr_Int self);
fr_Bool sys_Int_isDigit_f(fr_Env env, fr_Int self, fr_Int radix);
fr_Obj sys_Int_toDigit_f(fr_Env env, fr_Int self, fr_Int radix);
fr_Obj sys_Int_fromDigit_f(fr_Env env, fr_Int self, fr_Int radix);
fr_Bool sys_Int_equalsIgnoreCase_f(fr_Env env, fr_Int self, fr_Int ch);
fr_Obj sys_Int_toLocale_f(fr_Env env, fr_Int self, fr_Obj pattern);
fr_Obj sys_Int_toStr_f(fr_Env env, fr_Int self);
fr_Obj sys_Int_toHex_f(fr_Env env, fr_Int self, fr_Int width);
fr_Obj sys_Int_toRadix_f(fr_Env env, fr_Int self, fr_Int radix, fr_Int width);
fr_Obj sys_Int_toChar_f(fr_Env env, fr_Int self);
fr_Obj sys_Int_toCode_f(fr_Env env, fr_Int self, fr_Int base);
void sys_Int_times_f(fr_Env env, fr_Int self, fr_Obj c);
void sys_Void_make_f(fr_Env env, fr_Obj self);
void sys_StrBuf_make_f(fr_Env env, fr_Obj self, fr_Int capacity);
fr_Bool sys_StrBuf_isEmpty_f(fr_Env env, fr_Obj self);
fr_Int sys_StrBuf_size_f(fr_Env env, fr_Obj self);
fr_Int sys_StrBuf_capacity_f(fr_Env env, fr_Obj self);
void sys_StrBuf_capacity__f(fr_Env env, fr_Obj self, fr_Int it);
fr_Int sys_StrBuf_get_f(fr_Env env, fr_Obj self, fr_Int index);
fr_Obj sys_StrBuf_getRange_f(fr_Env env, fr_Obj self, fr_Obj range);
fr_Obj sys_StrBuf_set_f(fr_Env env, fr_Obj self, fr_Int index, fr_Int ch);
fr_Obj sys_StrBuf_add_f(fr_Env env, fr_Obj self, fr_Obj x);
fr_Obj sys_StrBuf_addChar_f(fr_Env env, fr_Obj self, fr_Int ch);
fr_Obj sys_StrBuf_addStr_f(fr_Env env, fr_Obj self, fr_Obj str, fr_Int off, fr_Int len);
fr_Obj sys_StrBuf_join_f(fr_Env env, fr_Obj self, fr_Obj x, fr_Obj sep);
fr_Obj sys_StrBuf_insert_f(fr_Env env, fr_Obj self, fr_Int index, fr_Obj x);
fr_Obj sys_StrBuf_remove_f(fr_Env env, fr_Obj self, fr_Int index);
fr_Obj sys_StrBuf_removeRange_f(fr_Env env, fr_Obj self, fr_Obj r);
fr_Obj sys_StrBuf_replaceRange_f(fr_Env env, fr_Obj self, fr_Obj r, fr_Obj str);
fr_Obj sys_StrBuf_clear_f(fr_Env env, fr_Obj self);
fr_Obj sys_StrBuf_toStr_f(fr_Env env, fr_Obj self);
void sys_StrBuf_finalize_f(fr_Env env, fr_Obj self);
void sys_Func_make_f(fr_Env env, fr_Obj self);
fr_Int sys_Func_arity_f(fr_Env env, fr_Obj self);
fr_Obj sys_Func_callList_f(fr_Env env, fr_Obj self, fr_Obj args);
fr_Obj sys_Func_callOn_f(fr_Env env, fr_Obj self, fr_Obj target, fr_Obj args);
fr_Obj sys_Func_call_f(fr_Env env, fr_Obj self, fr_Obj a, fr_Obj b, fr_Obj c, fr_Obj d, fr_Obj e, fr_Obj f, fr_Obj g, fr_Obj h);
fr_Obj sys_Func_bind_f(fr_Env env, fr_Obj self, fr_Obj args);
void sys_Func_enterCtor_f(fr_Env env, fr_Obj self, fr_Obj obj);
void sys_Func_exitCtor_f(fr_Env env, fr_Obj self);
void sys_Func_checkInCtor_f(fr_Env env, fr_Obj self, fr_Obj obj);
void sys_Err_make_f(fr_Env env, fr_Obj self, fr_Obj msg, fr_Obj cause);
fr_Obj sys_Err_msg_f(fr_Env env, fr_Obj self);
fr_Obj sys_Err_cause_f(fr_Env env, fr_Obj self);
fr_Obj sys_Err_trace_f(fr_Env env, fr_Obj self);
fr_Obj sys_Err_traceToStr_f(fr_Env env, fr_Obj self);
fr_Obj sys_Err_toStr_f(fr_Env env, fr_Obj self);
void sys_Str_privateMake_f(fr_Env env, fr_Obj self);
fr_Obj sys_Str_fromChars_f(fr_Env env, fr_Obj chars, fr_Int offset, fr_Int len);
fr_Bool sys_Str_equals_f(fr_Env env, fr_Obj self, fr_Obj obj);
fr_Bool sys_Str_equalsIgnoreCase_f(fr_Env env, fr_Obj self, fr_Obj s);
fr_Int sys_Str_compare_f(fr_Env env, fr_Obj self, fr_Obj obj);
fr_Int sys_Str_compareIgnoreCase_f(fr_Env env, fr_Obj self, fr_Obj s);
fr_Int sys_Str_hash_f(fr_Env env, fr_Obj self);
fr_Obj sys_Str_toStr_f(fr_Env env, fr_Obj self);
fr_Bool sys_Str_isEmpty_f(fr_Env env, fr_Obj self);
fr_Int sys_Str_size_f(fr_Env env, fr_Obj self);
fr_Obj sys_Str_intern_f(fr_Env env, fr_Obj self);
fr_Bool sys_Str_startsWith_f(fr_Env env, fr_Obj self, fr_Obj s);
fr_Bool sys_Str_endsWith_f(fr_Env env, fr_Obj self, fr_Obj s);
fr_Int sys_Str_find_f(fr_Env env, fr_Obj self, fr_Obj s, fr_Int offset);
fr_Obj sys_Str_index_f(fr_Env env, fr_Obj self, fr_Obj s, fr_Int offset);
fr_Int sys_Str_findr_f(fr_Env env, fr_Obj self, fr_Obj s, fr_Int offset);
fr_Obj sys_Str_indexr_f(fr_Env env, fr_Obj self, fr_Obj s, fr_Int offset);
fr_Obj sys_Str_indexIgnoreCase_f(fr_Env env, fr_Obj self, fr_Obj s, fr_Int offset);
fr_Obj sys_Str_indexrIgnoreCase_f(fr_Env env, fr_Obj self, fr_Obj s, fr_Int offset);
fr_Bool sys_Str_contains_f(fr_Env env, fr_Obj self, fr_Obj s);
fr_Bool sys_Str_containsChar_f(fr_Env env, fr_Obj self, fr_Int ch);
fr_Int sys_Str_get_f(fr_Env env, fr_Obj self, fr_Int index);
fr_Int sys_Str_getSafe_f(fr_Env env, fr_Obj self, fr_Int index, fr_Int defV);
fr_Obj sys_Str_getRange_f(fr_Env env, fr_Obj self, fr_Obj range);
fr_Obj sys_Str_plus_f(fr_Env env, fr_Obj self, fr_Obj obj);
fr_Obj sys_Str_chars_f(fr_Env env, fr_Obj self);
void sys_Str_each_f(fr_Env env, fr_Obj self, fr_Obj c);
void sys_Str_eachr_f(fr_Env env, fr_Obj self, fr_Obj c);
fr_Bool sys_Str_any_f(fr_Env env, fr_Obj self, fr_Obj c);
fr_Bool sys_Str_all_f(fr_Env env, fr_Obj self, fr_Obj c);
fr_Obj sys_Str_spaces_f(fr_Env env, fr_Int n);
fr_Obj sys_Str_lower_f(fr_Env env, fr_Obj self);
fr_Obj sys_Str_upper_f(fr_Env env, fr_Obj self);
fr_Obj sys_Str_capitalize_f(fr_Env env, fr_Obj self);
fr_Obj sys_Str_decapitalize_f(fr_Env env, fr_Obj self);
fr_Obj sys_Str_toDisplayName_f(fr_Env env, fr_Obj self);
fr_Obj sys_Str_fromDisplayName_f(fr_Env env, fr_Obj self);
fr_Obj sys_Str_justl_f(fr_Env env, fr_Obj self, fr_Int width);
fr_Obj sys_Str_justr_f(fr_Env env, fr_Obj self, fr_Int width);
fr_Obj sys_Str_padl_f(fr_Env env, fr_Obj self, fr_Int width, fr_Int char_);
fr_Obj sys_Str_padr_f(fr_Env env, fr_Obj self, fr_Int width, fr_Int char_);
fr_Obj sys_Str_reverse_f(fr_Env env, fr_Obj self);
fr_Obj sys_Str_trim_f(fr_Env env, fr_Obj self);
fr_Obj sys_Str_trimToNull_f(fr_Env env, fr_Obj self);
fr_Obj sys_Str_trimStart_f(fr_Env env, fr_Obj self);
fr_Obj sys_Str_trimEnd_f(fr_Env env, fr_Obj self);
fr_Obj sys_Str_split_f(fr_Env env, fr_Obj self, fr_Obj separator, fr_Bool trim);
fr_Obj sys_Str_splitLines_f(fr_Env env, fr_Obj self);
fr_Obj sys_Str_replace_f(fr_Env env, fr_Obj self, fr_Obj from, fr_Obj to);
fr_Int sys_Str_numNewlines_f(fr_Env env, fr_Obj self);
fr_Bool sys_Str_isAscii_f(fr_Env env, fr_Obj self);
fr_Bool sys_Str_isSpace_f(fr_Env env, fr_Obj self);
fr_Bool sys_Str_isUpper_f(fr_Env env, fr_Obj self);
fr_Bool sys_Str_isLower_f(fr_Env env, fr_Obj self);
fr_Bool sys_Str_isAlpha_f(fr_Env env, fr_Obj self);
fr_Bool sys_Str_isAlphaNum_f(fr_Env env, fr_Obj self);
fr_Bool sys_Str_toBool_f(fr_Env env, fr_Obj self, fr_Bool checked);
fr_Int sys_Str_toInt_f(fr_Env env, fr_Obj self, fr_Int radix, fr_Bool checked);
fr_Float sys_Str_toFloat_f(fr_Env env, fr_Obj self, fr_Bool checked);
fr_Obj sys_Str_toCode_f(fr_Env env, fr_Obj self, fr_Int quote, fr_Bool escapeUnicode);
fr_Obj sys_Str_toXml_f(fr_Env env, fr_Obj self);
fr_Obj sys_Str_toUtf8_f(fr_Env env, fr_Obj self);
fr_Obj sys_Str_fromUtf8_f(fr_Env env, fr_Obj ba, fr_Int offset, fr_Int len);
void sys_Str_finalize_f(fr_Env env, fr_Obj self);
fr_Obj sys_Str_format_f(fr_Env env, fr_Obj format, fr_Obj args);
void sys_Str_static__init_f(fr_Env env);
fr_Bool sys_Bool_fromStr_f(fr_Env env, fr_Obj s, fr_Bool checked);
void sys_Bool_privateMake_f(fr_Env env, fr_Bool self);
fr_Bool sys_Bool_equals_f(fr_Env env, fr_Bool self, fr_Obj obj);
fr_Int sys_Bool_hash_f(fr_Env env, fr_Bool self);
fr_Obj sys_Bool_toStr_f(fr_Env env, fr_Bool self);
fr_Bool sys_Bool_not_f(fr_Env env, fr_Bool self);
fr_Bool sys_Bool_and_f(fr_Env env, fr_Bool self, fr_Bool b);
fr_Bool sys_Bool_or_f(fr_Env env, fr_Bool self, fr_Bool b);
fr_Bool sys_Bool_xor_f(fr_Env env, fr_Bool self, fr_Bool b);
fr_Obj sys_Bool_toCode_f(fr_Env env, fr_Bool self);
void sys_ObjArray_make_f(fr_Env env, fr_Obj self, fr_Int size, fr_Obj type);
fr_Obj sys_ObjArray_get_f(fr_Env env, fr_Obj self, fr_Int pos);
void sys_ObjArray_set_f(fr_Env env, fr_Obj self, fr_Int pos, fr_Obj val);
fr_Int sys_ObjArray_size_f(fr_Env env, fr_Obj self);
fr_Obj sys_ObjArray_realloc_f(fr_Env env, fr_Obj self, fr_Int newSize);
fr_Obj sys_ObjArray_fill_f(fr_Env env, fr_Obj self, fr_Obj obj, fr_Int times);
fr_Obj sys_ObjArray_copyFrom_f(fr_Env env, fr_Obj self, fr_Obj that, fr_Int thatOffset, fr_Int thisOffset, fr_Int length);
void sys_ObjArray_finalize_f(fr_Env env, fr_Obj self);
fr_Obj sys_ObjArray_fromJava_f(fr_Env env, fr_Obj of, fr_Obj array);
fr_Obj sys_ObjArray_toJava_f(fr_Env env, fr_Obj self, fr_Obj clz);
void sys_ByteArray_make_f(fr_Env env, fr_Obj self, fr_Int size);
fr_Int sys_ByteArray_get_f(fr_Env env, fr_Obj self, fr_Int pos);
void sys_ByteArray_set_f(fr_Env env, fr_Obj self, fr_Int pos, fr_Int val);
fr_Int sys_ByteArray_size_f(fr_Env env, fr_Obj self);
fr_Obj sys_ByteArray_realloc_f(fr_Env env, fr_Obj self, fr_Int newSize);
fr_Obj sys_ByteArray_fill_f(fr_Env env, fr_Obj self, fr_Int byte, fr_Int times);
fr_Obj sys_ByteArray_copyFrom_f(fr_Env env, fr_Obj self, fr_Obj that, fr_Int thatOffset, fr_Int thisOffset, fr_Int length);
void sys_ByteArray_finalize_f(fr_Env env, fr_Obj self);
fr_Float sys_Float_makeBits_f(fr_Env env, fr_Int bits);
fr_Float sys_Float_makeBits32_f(fr_Env env, fr_Int bits);
fr_Float sys_Float_fromStr_f(fr_Env env, fr_Obj s, fr_Bool checked);
fr_Float sys_Float_random_f(fr_Env env);
void sys_Float_privateMake_f(fr_Env env, fr_Float self);
fr_Bool sys_Float_equals_f(fr_Env env, fr_Float self, fr_Obj obj);
fr_Bool sys_Float_approx_f(fr_Env env, fr_Float self, fr_Float r, fr_Obj tolerance);
fr_Int sys_Float_compare_f(fr_Env env, fr_Float self, fr_Obj obj);
fr_Bool sys_Float_isNaN_f(fr_Env env, fr_Float self);
fr_Bool sys_Float_isNegZero_f(fr_Env env, fr_Float self);
fr_Float sys_Float_normNegZero_f(fr_Env env, fr_Float self);
fr_Int sys_Float_hash_f(fr_Env env, fr_Float self);
fr_Float sys_Float_negate_f(fr_Env env, fr_Float self);
fr_Float sys_Float_increment_f(fr_Env env, fr_Float self);
fr_Float sys_Float_decrement_f(fr_Env env, fr_Float self);
fr_Float sys_Float_mult_f(fr_Env env, fr_Float self, fr_Float b);
fr_Float sys_Float_multInt_f(fr_Env env, fr_Float self, fr_Int b);
fr_Float sys_Float_div_f(fr_Env env, fr_Float self, fr_Float b);
fr_Float sys_Float_divInt_f(fr_Env env, fr_Float self, fr_Int b);
fr_Float sys_Float_mod_f(fr_Env env, fr_Float self, fr_Float b);
fr_Float sys_Float_modInt_f(fr_Env env, fr_Float self, fr_Int b);
fr_Float sys_Float_plus_f(fr_Env env, fr_Float self, fr_Float b);
fr_Float sys_Float_plusInt_f(fr_Env env, fr_Float self, fr_Int b);
fr_Float sys_Float_minus_f(fr_Env env, fr_Float self, fr_Float b);
fr_Float sys_Float_minusInt_f(fr_Env env, fr_Float self, fr_Int b);
fr_Int sys_Float_bits_f(fr_Env env, fr_Float self);
fr_Int sys_Float_bits32_f(fr_Env env, fr_Float self);
fr_Obj sys_Float_toStr_f(fr_Env env, fr_Float self);
fr_Obj sys_Float_toCode_f(fr_Env env, fr_Float self);
fr_Obj sys_Float_toLocale_f(fr_Env env, fr_Float self, fr_Obj pattern);
void sys_Type_privateMake_f(fr_Env env, fr_Obj self);
fr_Obj sys_Type_of_f(fr_Env env, fr_Obj obj);
fr_Obj sys_Type_find_f(fr_Env env, fr_Obj qname, fr_Bool checked);
fr_Obj sys_Type_name_f(fr_Env env, fr_Obj self);
fr_Obj sys_Type_qname_f(fr_Env env, fr_Obj self);
fr_Obj sys_Type_signature_f(fr_Env env, fr_Obj self);
fr_Obj sys_Type_base_f(fr_Env env, fr_Obj self);
fr_Obj sys_Type_mixins_f(fr_Env env, fr_Obj self);
fr_Obj sys_Type_inheritance_f(fr_Env env, fr_Obj self);
fr_Bool sys_Type_fits_f(fr_Env env, fr_Obj self, fr_Obj t);
fr_Bool sys_Type_isVal_f(fr_Env env, fr_Obj self);
fr_Bool sys_Type_isNullable_f(fr_Env env, fr_Obj self);
fr_Obj sys_Type_toNullable_f(fr_Env env, fr_Obj self);
fr_Obj sys_Type_toNonNullable_f(fr_Env env, fr_Obj self);
fr_Bool sys_Type_isAbstract_f(fr_Env env, fr_Obj self);
fr_Bool sys_Type_isClass_f(fr_Env env, fr_Obj self);
fr_Bool sys_Type_isConst_f(fr_Env env, fr_Obj self);
fr_Bool sys_Type_isEnum_f(fr_Env env, fr_Obj self);
fr_Bool sys_Type_isFacet_f(fr_Env env, fr_Obj self);
fr_Bool sys_Type_isFinal_f(fr_Env env, fr_Obj self);
fr_Bool sys_Type_isInternal_f(fr_Env env, fr_Obj self);
fr_Bool sys_Type_isMixin_f(fr_Env env, fr_Obj self);
fr_Bool sys_Type_isPublic_f(fr_Env env, fr_Obj self);
fr_Bool sys_Type_isSynthetic_f(fr_Env env, fr_Obj self);
fr_Obj sys_Type_toStr_f(fr_Env env, fr_Obj self);
fr_Bool sys_Type_isJava_f(fr_Env env, fr_Obj self);
fr_Obj sys_Enum_doFromStr_f(fr_Env env, fr_Obj type, fr_Obj name, fr_Bool checked);

CF_END
